<?xml version="1.0" ?>
<launch>
  <arg name="world" default="empty"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find arp_gazebo)/worlds/gas_station.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="gui" value="$(arg gui)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="debug" value="$(arg debug)"/>
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server, converting the xacro into a proper urdf file-->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find arp_description)/urdf/arp.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="arp_spawn" pkg="gazebo_ros" type="spawn_model" output="screen"
  args="-urdf -param robot_description -model arp" />

  <!-- ros_control mybot launch file
  <include file="$(find arp_gazebo)/launch/arp_control_gazebo.launch" />-->

  <!-- Load joint controller configurations from YAML file to parameter server-->
  <rosparam file="$(find arp_gazebo)/config/arp_control_gazebo.yaml" command="load"/>

  <!-- load the controllers-->
  <node name="controller_spawner"
      pkg="controller_manager"
      type="spawner" respawn="false"
      output="screen" ns="/arp/gazebo"
      args="joint_state_controller
          front_left_velocity_controller
          front_right_velocity_controller
          back_left_velocity_controller
          back_right_velocity_controller
          --shutdown-timeout 3
          "
  />

  <!-- run gazebo driver-->
  <node name="arp_driver_ros_gazebo" pkg="arp_driver_ros_gazebo" type="driver_ros_gazebo" />

</launch>


